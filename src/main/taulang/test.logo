to :get_list [:num] [ [ num num num ] ]
print get_list  1

import "tau/test/tautest" ""



test "True means tue" [
  assert_true true
]

test "False means false" [
  printline "In the test"
  assert_false false
]

test "An error is an error" [
  throw_error "test error"
]

printline "Testing..."

helper "test.logo"

print [ "In test.logo" newline ]
make :result "ss"

printline [ "Testing with result=" result " and doesNotExist=" doesNotExist ]

required result
printline "we have a result"
if is_error required doesNotExist
  [ printline "Nothing" ]
  [ printline "what happened?" ]

printline [ "Something? " ifnull result "Yes!" ]
printline [ "Something? " ifnull doesNotExist "No!" ]


to :introduce_tau [:to_whom]
  [ printline [ "Hello " 
                ifnull to_whom "Anonymous Person" 
                ", I am Tau." ]
  ]
introduce_tau "Curious Reader"
introduce_tau ?

define_object :Name [:first_name :last_name]
  [ printline "Defining an object!" ]

make :p1 Name "John" "Smith"
printline ["Object? " is_object p1]


to :get_list [:num] [ [ num num num ] ]
printline ["get_list " get_list 2 ]



to :int_range_next [:start :end]
[ 
  /* printline ["debug " start "; " end ] */
  [ start
    [ plus start 1
      end] 
  ]
]

to :int_range_has_next [:start :end]
[ not gt start end ]

to :int_range [:start :end]
[ new_stream 
    [start end] 
    :int_range_has_next 
    :int_range_next
]

printline "Testing the stream:"
for_each int_range 1 10 
  lambda [:i] [printline ["Iteration " i]]

try_catch
[ for_each stream_from_uri "/tmp/test.txts"
    lambda [:c] [ print c ]
]
[ printline 
  [ "An error occured: ["
    error_code $1
    "] "
    error_message $1
  ]
]
