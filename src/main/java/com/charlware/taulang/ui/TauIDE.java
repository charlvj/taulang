/*
2Tim2v15
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.charlware.taulang.ui;

import com.wordpress.tips4java.MessageConsole;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import javax.swing.JComponent;
import javax.swing.JFileChooser;

/**
 *
 * @author charlvj
 */
public class TauIDE extends javax.swing.JFrame {

    private Executor exec = Executors.newSingleThreadExecutor();
    private TauExecutor tauExecutor;
    private Map<String, JComponent> tabs = new HashMap();
    private int unnamedCount = 1;
    private List<String> history = new ArrayList();
    private int historyPosition = 0;
    private MessageConsole messageConsole;
    
    /**
     * Creates new form TauIDE
     */
    public TauIDE() {
        initComponents();
        
        messageConsole = new MessageConsole(txOutput);
        messageConsole.redirectOut();
        messageConsole.redirectErr(Color.red, null);
        
        tauExecutor = new TauExecutor(); 
    }

    private int addClosableTab(String title, JComponent component) {
        // First see if we can find one already...
        JComponent cur = tabs.get(title);
        if(cur != null) {
            // Remove it so it can be replaced by the new one...
            tabs.remove(title);
            pnTabs.remove(cur);
        }
        pnTabs.addTab(title, component);
        int idx = pnTabs.indexOfComponent(component);
        pnTabs.setTabComponentAt(idx, new ButtonTabComponent(pnTabs));
        tabs.put(title, component);
        pack();
        return idx;
    }
    
    public List<File> getFiles() {
        List<File> files = new ArrayList();
        for(JComponent comp: tabs.values()) {
            TauEditorPane p = (TauEditorPane) comp;
            try {
                p.saveFile(true);
            } catch (FileNotFoundException ex) {
                System.out.println("Trouble loading a file: " + ex);
            }
            files.add(p.getFile());
        }
        return files;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        btNew = new javax.swing.JButton();
        btOpen = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txOutput = new javax.swing.JTextArea();
        txCode = new javax.swing.JTextField();
        pnTabs = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        btNew.setText("New");
        btNew.setFocusable(false);
        btNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btNew);

        btOpen.setText("Open...");
        btOpen.setFocusable(false);
        btOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btOpen);

        btSave.setText("Save");
        btSave.setFocusable(false);
        btSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btSave);
        jToolBar1.add(jSeparator1);

        jButton4.setText("Run");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);

        jButton5.setText("Stop");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setDividerLocation(300);

        jPanel1.setLayout(new java.awt.BorderLayout());

        txOutput.setColumns(20);
        txOutput.setRows(5);
        jScrollPane1.setViewportView(txOutput);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        txCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txCodeActionPerformed(evt);
            }
        });
        txCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txCodeKeyPressed(evt);
            }
        });
        jPanel1.add(txCode, java.awt.BorderLayout.PAGE_END);

        jSplitPane1.setLeftComponent(jPanel1);
        jSplitPane1.setRightComponent(pnTabs);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        TauEditorPane editor = new TauEditorPane();
        String filename = "Unnamed" + unnamedCount++;
        editor.newFile(filename);
        addClosableTab(filename, editor);
    }//GEN-LAST:event_btNewActionPerformed

    private void btOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenActionPerformed
        int res = fileChooser.showOpenDialog(this);
        if(res == JFileChooser.APPROVE_OPTION)  {
            File f = fileChooser.getSelectedFile();
            TauEditorPane editor = new TauEditorPane();
            try {
                editor.openFile(f);
                addClosableTab(f.getName(), editor);
                pnTabs.setSelectedComponent(editor);
            } catch (IOException ex) {
                System.err.println("Error while opening file: " + ex);
            }
        }
    }//GEN-LAST:event_btOpenActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        TauEditorPane editor = (TauEditorPane) pnTabs.getSelectedComponent();
        int index = pnTabs.getSelectedIndex();
        String fname = pnTabs.getTitleAt(index);
        if(editor.isNew()) {
            int res = fileChooser.showSaveDialog(this);

            if(res != JFileChooser.APPROVE_OPTION) {
                return;
            }
            File f = fileChooser.getSelectedFile();
            editor.setFile(f);
            pnTabs.setTitleAt(index, f.getName());
        }
        try {
            editor.saveFile();
        } catch (FileNotFoundException ex) {
            System.err.println("Error saving file: " + ex);
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void txCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txCodeActionPerformed
        try {
            String code = txCode.getText();
            if (!code.isEmpty()) {
                tauExecutor.bootstrap(getFiles());
                txCode.setText("");
                exec.execute(() -> tauExecutor.run(code));
                history.add(code);
                historyPosition = history.size();
            }
        } catch (Exception ex) {
            System.err.println("Error: " + ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txCodeActionPerformed

    private void txCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCodeKeyPressed
        switch (evt.getExtendedKeyCode()) {
            case KeyEvent.VK_UP:
                if (historyPosition > 0) {
                    txCode.setText(history.get(--historyPosition));
                }
                break;
            case KeyEvent.VK_DOWN:
                if (historyPosition < history.size() - 1) {
                    txCode.setText(history.get(++historyPosition));
                } else {
                    txCode.setText("");
                }
                break;
        }
    }//GEN-LAST:event_txCodeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TauIDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TauIDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TauIDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TauIDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TauIDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btNew;
    private javax.swing.JButton btOpen;
    private javax.swing.JButton btSave;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTabbedPane pnTabs;
    private javax.swing.JTextField txCode;
    private javax.swing.JTextArea txOutput;
    // End of variables declaration//GEN-END:variables
}
